// <auto-generated />
using System;
using DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DfE.FindInformationAcademiesTrusts.TestDataMigrator.Migrations
{
    [DbContext(typeof(AcademiesDbContext))]
    [Migration("20250522150738_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Gias.GiasEstablishment", b =>
                {
                    b.Property<int>("Urn")
                        .HasColumnType("int")
                        .HasColumnName("URN");

                    b.Property<string>("AccreditationExpiryDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Address3")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AdministrativeWardCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("AdministrativeWard (code)");

                    b.Property<string>("AdministrativeWardName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("AdministrativeWard (name)");

                    b.Property<string>("AdmissionsPolicyCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("AdmissionsPolicy (code)");

                    b.Property<string>("AdmissionsPolicyName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("AdmissionsPolicy (name)");

                    b.Property<string>("BoardersCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Boarders (code)");

                    b.Property<string>("BoardersName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Boarders (name)");

                    b.Property<string>("BoardingEstablishmentName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("BoardingEstablishment (name)");

                    b.Property<string>("BsoinspectorateNameName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("BSOInspectorateName (name)");

                    b.Property<string>("CcfName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CCF (name)");

                    b.Property<string>("CensusDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Chnumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CHNumber");

                    b.Property<string>("CloseDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CountryName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Country (name)");

                    b.Property<string>("CountyName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("County (name)");

                    b.Property<string>("DateOfLastInspectionVisit")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DioceseCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Diocese (code)");

                    b.Property<string>("DioceseName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Diocese (name)");

                    b.Property<string>("DistrictAdministrativeCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("DistrictAdministrative (code)");

                    b.Property<string>("DistrictAdministrativeName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("DistrictAdministrative (name)");

                    b.Property<string>("Easting")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("EbdName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EBD (name)");

                    b.Property<string>("EdByOtherName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EdByOther (name)");

                    b.Property<string>("EstablishmentAccreditedCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EstablishmentAccredited (code)");

                    b.Property<string>("EstablishmentAccreditedName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EstablishmentAccredited (name)");

                    b.Property<string>("EstablishmentName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("EstablishmentNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("EstablishmentStatusCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EstablishmentStatus (code)");

                    b.Property<string>("EstablishmentStatusName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EstablishmentStatus (name)");

                    b.Property<string>("EstablishmentTypeGroupCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EstablishmentTypeGroup (code)");

                    b.Property<string>("EstablishmentTypeGroupName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EstablishmentTypeGroup (name)");

                    b.Property<string>("FederationFlagName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("FederationFlag (name)");

                    b.Property<string>("FederationsCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Federations (code)");

                    b.Property<string>("FederationsName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Federations (name)");

                    b.Property<string>("Feheidentifier")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("FEHEIdentifier");

                    b.Property<string>("Fsm")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("FSM");

                    b.Property<string>("FtprovName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("FTProv (name)");

                    b.Property<string>("FurtherEducationTypeName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("FurtherEducationType (name)");

                    b.Property<string>("GenderCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Gender (code)");

                    b.Property<string>("GenderName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Gender (name)");

                    b.Property<string>("GorCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GOR (code)");

                    b.Property<string>("GorName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GOR (name)");

                    b.Property<string>("GsslacodeName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GSSLACode (name)");

                    b.Property<string>("HeadFirstName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("HeadLastName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("HeadPreferredJobTitle")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("HeadTitleName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("HeadTitle (name)");

                    b.Property<string>("InspectorateNameName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("InspectorateName (name)");

                    b.Property<string>("InspectorateReport")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LaCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LA (code)");

                    b.Property<string>("LaName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LA (name)");

                    b.Property<string>("LastChangedDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Locality")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LsoaCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LSOA (code)");

                    b.Property<string>("LsoaName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LSOA (name)");

                    b.Property<string>("MsoaCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("MSOA (code)");

                    b.Property<string>("MsoaName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("MSOA (name)");

                    b.Property<string>("NextInspectionVisit")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Northing")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NumberOfBoys")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NumberOfGirls")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NumberOfPupils")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NurseryProvisionName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("NurseryProvision (name)");

                    b.Property<string>("OfficialSixthFormCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("OfficialSixthForm (code)");

                    b.Property<string>("OfficialSixthFormName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("OfficialSixthForm (name)");

                    b.Property<string>("OfstedLastInsp")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OfstedRatingName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("OfstedRating (name)");

                    b.Property<string>("OfstedSpecialMeasuresCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("OfstedSpecialMeasures (code)");

                    b.Property<string>("OfstedSpecialMeasuresName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("OfstedSpecialMeasures (name)");

                    b.Property<string>("OpenDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ParliamentaryConstituencyCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ParliamentaryConstituency (code)");

                    b.Property<string>("ParliamentaryConstituencyName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ParliamentaryConstituency (name)");

                    b.Property<string>("PercentageFsm")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PercentageFSM");

                    b.Property<string>("PhaseOfEducationCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PhaseOfEducation (code)");

                    b.Property<string>("PhaseOfEducationName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PhaseOfEducation (name)");

                    b.Property<string>("PlacesPru")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PlacesPRU");

                    b.Property<string>("Postcode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PreviousEstablishmentNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PreviousLaCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PreviousLA (code)");

                    b.Property<string>("PreviousLaName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PreviousLA (name)");

                    b.Property<string>("PropsName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("QabnameCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("QABName (code)");

                    b.Property<string>("QabnameName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("QABName (name)");

                    b.Property<string>("Qabreport")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("QABReport");

                    b.Property<string>("ReasonEstablishmentClosedCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ReasonEstablishmentClosed (code)");

                    b.Property<string>("ReasonEstablishmentClosedName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ReasonEstablishmentClosed (name)");

                    b.Property<string>("ReasonEstablishmentOpenedCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ReasonEstablishmentOpened (code)");

                    b.Property<string>("ReasonEstablishmentOpenedName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ReasonEstablishmentOpened (name)");

                    b.Property<string>("ReligiousCharacterCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ReligiousCharacter (code)");

                    b.Property<string>("ReligiousCharacterName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ReligiousCharacter (name)");

                    b.Property<string>("ReligiousEthosName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ReligiousEthos (name)");

                    b.Property<string>("ResourcedProvisionCapacity")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ResourcedProvisionOnRoll")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RscregionName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("RSCRegion (name)");

                    b.Property<string>("SchoolCapacity")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SchoolSponsorFlagName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SchoolSponsorFlag (name)");

                    b.Property<string>("SchoolSponsorsName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SchoolSponsors (name)");

                    b.Property<string>("SchoolWebsite")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Section41ApprovedName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Section41Approved (name)");

                    b.Property<string>("Sen10Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN10 (name)");

                    b.Property<string>("Sen11Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN11 (name)");

                    b.Property<string>("Sen12Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN12 (name)");

                    b.Property<string>("Sen13Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN13 (name)");

                    b.Property<string>("Sen1Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN1 (name)");

                    b.Property<string>("Sen2Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN2 (name)");

                    b.Property<string>("Sen3Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN3 (name)");

                    b.Property<string>("Sen4Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN4 (name)");

                    b.Property<string>("Sen5Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN5 (name)");

                    b.Property<string>("Sen6Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN6 (name)");

                    b.Property<string>("Sen7Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN7 (name)");

                    b.Property<string>("Sen8Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN8 (name)");

                    b.Property<string>("Sen9Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SEN9 (name)");

                    b.Property<string>("SenUnitCapacity")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SenUnitOnRoll")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SennoStat")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SENNoStat");

                    b.Property<string>("SenpruName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SENPRU (name)");

                    b.Property<string>("Senstat")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SENStat");

                    b.Property<string>("SiteName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SpecialClassesCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SpecialClasses (code)");

                    b.Property<string>("SpecialClassesName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SpecialClasses (name)");

                    b.Property<string>("StatutoryHighAge")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("StatutoryLowAge")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Street")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TeenMothName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TeenMoth (name)");

                    b.Property<string>("TeenMothPlaces")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TelephoneNum")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Town")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TrustSchoolFlagCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TrustSchoolFlag (code)");

                    b.Property<string>("TrustSchoolFlagName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TrustSchoolFlag (name)");

                    b.Property<string>("TrustsCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Trusts (code)");

                    b.Property<string>("TrustsName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Trusts (name)");

                    b.Property<string>("TypeOfEstablishmentCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TypeOfEstablishment (code)");

                    b.Property<string>("TypeOfEstablishmentName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TypeOfEstablishment (name)");

                    b.Property<string>("TypeOfResourcedProvisionName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TypeOfResourcedProvision (name)");

                    b.Property<string>("Ukprn")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("UKPRN");

                    b.Property<string>("Uprn")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("UPRN");

                    b.Property<string>("UrbanRuralCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("UrbanRural (code)");

                    b.Property<string>("UrbanRuralName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("UrbanRural (name)");

                    b.HasKey("Urn");

                    b.ToTable("Establishment", "gias");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Gias.GiasEstablishmentLink", b =>
                {
                    b.Property<string>("LinkEstablishedDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LinkName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LinkType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LinkUrn")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LinkURN");

                    b.Property<string>("Urn")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("URN");

                    b.ToTable("EstablishmentLink", "gias");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Gias.GiasGovernance", b =>
                {
                    b.Property<string>("AppointingBody")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Appointing body");

                    b.Property<string>("CompaniesHouseNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Companies House Number");

                    b.Property<string>("DateOfAppointment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Date of appointment");

                    b.Property<string>("DateTermOfOfficeEndsEnded")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Date term of office ends/ended");

                    b.Property<string>("Forename1")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Forename 1");

                    b.Property<string>("Forename2")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Forename 2");

                    b.Property<string>("Gid")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GID");

                    b.Property<string>("Role")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Surname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Title")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Uid")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("UID");

                    b.Property<string>("Urn")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("URN");

                    b.ToTable("Governance", "gias");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Gias.GiasGroup", b =>
                {
                    b.Property<string>("ClosedDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Closed Date");

                    b.Property<string>("CompaniesHouseNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Companies House Number");

                    b.Property<string>("GroupContactLocality")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Contact Locality");

                    b.Property<string>("GroupContactPostcode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Contact Postcode");

                    b.Property<string>("GroupContactStreet")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Contact Street");

                    b.Property<string>("GroupContactTown")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Contact Town");

                    b.Property<string>("GroupId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group ID");

                    b.Property<string>("GroupName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Name");

                    b.Property<string>("GroupStatus")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Status");

                    b.Property<string>("GroupStatusCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Status (code)");

                    b.Property<string>("GroupType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Type");

                    b.Property<string>("GroupTypeCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Type (code)");

                    b.Property<string>("GroupUid")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group UID");

                    b.Property<string>("HeadOfGroupFirstName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Head of Group First Name");

                    b.Property<string>("HeadOfGroupLastName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Head of Group Last Name");

                    b.Property<string>("HeadOfGroupTitle")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Head of Group Title");

                    b.Property<string>("IncorporatedOnOpenDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Incorporated on (open date)");

                    b.Property<string>("OpenDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Open date");

                    b.Property<string>("Ukprn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UKPRN");

                    b.ToTable("Group", "gias");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Gias.GiasGroupLink", b =>
                {
                    b.Property<string>("ClosedDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Closed Date");

                    b.Property<string>("CompaniesHouseNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Companies House Number");

                    b.Property<string>("EstablishmentName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("GroupId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group ID");

                    b.Property<string>("GroupName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Name");

                    b.Property<string>("GroupStatus")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Status");

                    b.Property<string>("GroupStatusCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Status (code)");

                    b.Property<string>("GroupType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Type");

                    b.Property<string>("GroupTypeCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group Type (code)");

                    b.Property<string>("GroupUid")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Group UID");

                    b.Property<string>("IncorporatedOnOpenDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Incorporated on (open date)");

                    b.Property<string>("JoinedDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Joined date");

                    b.Property<string>("LaCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LA (code)");

                    b.Property<string>("LaName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LA (name)");

                    b.Property<string>("OpenDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Open date");

                    b.Property<string>("PhaseOfEducationCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PhaseOfEducation (code)");

                    b.Property<string>("PhaseOfEducationName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PhaseOfEducation (name)");

                    b.Property<string>("TypeOfEstablishmentCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TypeOfEstablishment (code)");

                    b.Property<string>("TypeOfEstablishmentName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TypeOfEstablishment (name)");

                    b.Property<string>("Urn")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("URN");

                    b.Property<string>("UrnGroupUid")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("URN_GroupUID");

                    b.ToTable("GroupLink", "gias");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Mis_Mstr.MisMstrEstablishmentFiat", b =>
                {
                    b.Property<int>("Urn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("urn");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Urn"));

                    b.Property<string>("AdmissionsPolicy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("admissions_policy");

                    b.Property<int?>("BehaviourAndAttitudes")
                        .HasColumnType("int")
                        .HasColumnName("behaviour_and_attitudes");

                    b.Property<string>("CategoryOfConcern")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category_of_concern");

                    b.Property<string>("DateOfLatestSection8Inspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_of_latest_section_8_inspection");

                    b.Property<string>("DesignatedReligiousCharacter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designated_religious_character");

                    b.Property<string>("DidTheLatestSection8InspectionConvertToAFullInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("did_the_latest_section_8_inspection_convert_to_a_full_inspection");

                    b.Property<string>("DoesTheLatestFullInspectionRelateToTheUrnOfTheCurrentSchool")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("does_the_latest_full_inspection_relate_to_the_urn_of_the_current_school");

                    b.Property<string>("DoesThePreviousFullInspectionRelateToTheUrnOfTheCurrentSchool")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("does_the_previous_full_inspection_relate_to_the_urn_of_the_current_school");

                    b.Property<string>("DoesTheSection8InspectionRelateToTheUrnOfTheCurrentSchool")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("does_the_section_8_inspection_relate_to_the_urn_of_the_current_school");

                    b.Property<int?>("EarlyYearsProvisionWhereApplicable")
                        .HasColumnType("int")
                        .HasColumnName("early_years_provision_where_applicable");

                    b.Property<int?>("EffectivenessOfLeadershipAndManagement")
                        .HasColumnType("int")
                        .HasColumnName("effectiveness_of_leadership_and_management");

                    b.Property<string>("EventTypeGrouping")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("event_type_grouping");

                    b.Property<string>("FaithGrouping")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("faith_grouping");

                    b.Property<int?>("IncomeDeprivationAffectingChildrenIndexIdaciQuintile")
                        .HasColumnType("int")
                        .HasColumnName("the_income_deprivation_affecting_children_index_idaci_quintile");

                    b.Property<string>("InspectionNumberOfLatestFullInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inspection_number_of_latest_full_inspection");

                    b.Property<string>("InspectionStartDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inspection_start_date");

                    b.Property<string>("InspectionType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inspection_type");

                    b.Property<string>("InspectionTypeGrouping")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inspection_type_grouping");

                    b.Property<int?>("Laestab")
                        .HasColumnType("int")
                        .HasColumnName("laestab");

                    b.Property<int?>("LaestabAtTimeOfLatestFullInspection")
                        .HasColumnType("int")
                        .HasColumnName("laestab_at_time_of_latest_full_inspection");

                    b.Property<int?>("LaestabAtTimeOfPreviousFullInspection")
                        .HasColumnType("int")
                        .HasColumnName("laestab_at_time_of_previous_full_inspection");

                    b.Property<int?>("LaestabAtTimeOfSection8Inspection")
                        .HasColumnType("int")
                        .HasColumnName("laestab_at_time_of_the_section_8_inspection");

                    b.Property<string>("LatestSection8InspectionNumberSinceLastFullInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("latest_section_8_inspection_number_since_last_full_inspection");

                    b.Property<string>("LocalAuthority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("local_authority");

                    b.Property<DateTime?>("MetaIngestionDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("meta_ingestion_datetime");

                    b.Property<string>("MetaSourceFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("meta_source_filename");

                    b.Property<int?>("NumberOfOtherSection8InspectionsSinceLastFullInspection")
                        .HasColumnType("int")
                        .HasColumnName("number_of_other_section_8_inspections_since_last_full_inspection");

                    b.Property<int?>("NumberOfSection8InspectionsSinceLastFullInspection")
                        .HasColumnType("int")
                        .HasColumnName("number_of_section_8_inspections_since_the_last_full_inspection");

                    b.Property<string>("OfstedPhase")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ofsted_phase");

                    b.Property<string>("OfstedRegion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ofsted_region");

                    b.Property<string>("OverallEffectiveness")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("overall_effectiveness");

                    b.Property<string>("ParliamentaryConstituency")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("parliamentary_constituency");

                    b.Property<int?>("PersonalDevelopment")
                        .HasColumnType("int")
                        .HasColumnName("personal_development");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("postcode");

                    b.Property<int?>("PreviousBehaviourAndAttitudes")
                        .HasColumnType("int")
                        .HasColumnName("previous_behaviour_and_attitudes");

                    b.Property<string>("PreviousCategoryOfConcern")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_category_of_concern");

                    b.Property<int?>("PreviousEarlyYearsProvisionWhereApplicable")
                        .HasColumnType("int")
                        .HasColumnName("previous_early_years_provision_where_applicable");

                    b.Property<int?>("PreviousEffectivenessOfLeadershipAndManagement")
                        .HasColumnType("int")
                        .HasColumnName("previous_effectiveness_of_leadership_and_management");

                    b.Property<string>("PreviousFullInspectionNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_full_inspection_number");

                    b.Property<string>("PreviousFullInspectionOverallEffectiveness")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_full_inspection_overall_effectiveness");

                    b.Property<string>("PreviousInspectionStartDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_inspection_start_date");

                    b.Property<int?>("PreviousPersonalDevelopment")
                        .HasColumnType("int")
                        .HasColumnName("previous_personal_development");

                    b.Property<string>("PreviousPublicationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_publication_date");

                    b.Property<int?>("PreviousQualityOfEducation")
                        .HasColumnType("int")
                        .HasColumnName("previous_quality_of_education");

                    b.Property<string>("PreviousSafeguardingIsEffective")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_safeguarding_is_effective");

                    b.Property<string>("PreviousSixthFormProvisionWhereApplicable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_sixth_form_provision_where_applicable");

                    b.Property<string>("PublicationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("publication_date");

                    b.Property<int?>("QualityOfEducation")
                        .HasColumnType("int")
                        .HasColumnName("quality_of_education");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("region");

                    b.Property<string>("ReligiousEthos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("religious_ethos");

                    b.Property<string>("SafeguardingIsEffective")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("safeguarding_is_effective");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_name");

                    b.Property<string>("SchoolNameAtTimeOfLatestFullInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_name_at_time_of_latest_full_inspection");

                    b.Property<string>("SchoolNameAtTimeOfLatestSection8Inspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_name_at_time_of_the_latest_section_8_inspection");

                    b.Property<string>("SchoolNameAtTimeOfPreviousFullInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_name_at_time_of_previous_full_inspection");

                    b.Property<string>("SchoolOpenDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_open_date");

                    b.Property<string>("SchoolTypeAtTimeOfLatestFullInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_type_at_time_of_latest_full_inspection");

                    b.Property<string>("SchoolTypeAtTimeOfLatestSection8Inspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_type_at_time_of_the_latest_section_8_inspection");

                    b.Property<string>("SchoolTypeAtTimeOfPreviousFullInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_type_at_time_of_previous_full_inspection");

                    b.Property<string>("Section8InspectionOverallOutcome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("section_8_inspection_overall_outcome");

                    b.Property<string>("Section8InspectionPublicationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("section_8_inspection_publication_date");

                    b.Property<string>("SixthForm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sixth_form");

                    b.Property<int?>("SixthFormProvisionWhereApplicable")
                        .HasColumnType("int")
                        .HasColumnName("sixth_form_provision_where_applicable");

                    b.Property<int?>("StatutoryHighestAge")
                        .HasColumnType("int")
                        .HasColumnName("statutory_highest_age");

                    b.Property<int?>("StatutoryLowestAge")
                        .HasColumnType("int")
                        .HasColumnName("statutory_lowest_age");

                    b.Property<int?>("TotalNumberOfPupils")
                        .HasColumnType("int")
                        .HasColumnName("total_number_of_pupils");

                    b.Property<string>("TypeOfEducation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type_of_education");

                    b.Property<int?>("UrnAtTimeOfLatestFullInspection")
                        .HasColumnType("int")
                        .HasColumnName("urn_at_time_of_latest_full_inspection");

                    b.Property<int?>("UrnAtTimeOfPreviousFullInspection")
                        .HasColumnType("int")
                        .HasColumnName("urn_at_time_of_previous_full_inspection");

                    b.Property<int?>("UrnAtTimeOfSection8Inspection")
                        .HasColumnType("int")
                        .HasColumnName("urn_at_time_of_the_section_8_inspection");

                    b.Property<string>("WebLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("web_link");

                    b.HasKey("Urn");

                    b.ToTable("Establishments_FIAT", "mis_mstr");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Mis_Mstr.MisMstrFurtherEducationEstablishmentFiat", b =>
                {
                    b.Property<int>("ProviderUrn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("provider_urn");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderUrn"));

                    b.Property<int?>("BehaviourAndAttitudes")
                        .HasColumnType("int")
                        .HasColumnName("behaviour_and_attitudes");

                    b.Property<string>("DateOfLatestShortInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_of_latest_short_inspection");

                    b.Property<string>("DatePublished")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_published");

                    b.Property<int?>("EffectivenessOfLeadershipAndManagement")
                        .HasColumnType("int")
                        .HasColumnName("effectiveness_of_leadership_and_management");

                    b.Property<string>("FirstDayOfInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_day_of_inspection");

                    b.Property<string>("ImprovedDeclinedStayedTheSame")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("improved_declined_stayed_the_same");

                    b.Property<string>("InspectionNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inspection_number");

                    b.Property<string>("InspectionType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inspection_type");

                    b.Property<string>("IsSafeguardingEffective")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("is_safeguarding_effective");

                    b.Property<string>("LastDayOfInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_day_of_inspection");

                    b.Property<string>("LocalAuthority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("local_authority");

                    b.Property<DateTime?>("MetaIngestionDatetime")
                        .HasColumnType("datetime2")
                        .HasColumnName("meta_ingestion_datetime");

                    b.Property<string>("MetaSourceFilename")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("meta_source_filename");

                    b.Property<int?>("NumberOfShortInspectionsSinceLastFullInspection")
                        .HasColumnType("int")
                        .HasColumnName("number_of_short_inspections_since_last_full_inspection");

                    b.Property<string>("OfstedRegion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ofsted_region");

                    b.Property<string>("OverallEffectiveness")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("overall_effectiveness");

                    b.Property<int?>("PersonalDevelopment")
                        .HasColumnType("int")
                        .HasColumnName("personal_development");

                    b.Property<int?>("PreviousBehaviourAndAttitudes")
                        .HasColumnType("int")
                        .HasColumnName("previous_behaviour_and_attitudes");

                    b.Property<int?>("PreviousEffectivenessOfLeadershipAndManagement")
                        .HasColumnType("int")
                        .HasColumnName("previous_effectiveness_of_leadership_and_management");

                    b.Property<string>("PreviousInspectionNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_inspection_number");

                    b.Property<string>("PreviousLastDayOfInspection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_last_day_of_inspection");

                    b.Property<string>("PreviousOverallEffectiveness")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_overall_effectiveness");

                    b.Property<int?>("PreviousPersonalDevelopment")
                        .HasColumnType("int")
                        .HasColumnName("previous_personal_development");

                    b.Property<int?>("PreviousQualityOfEducation")
                        .HasColumnType("int")
                        .HasColumnName("previous_quality_of_education");

                    b.Property<string>("PreviousSafeguarding")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("previous_safeguarding");

                    b.Property<string>("ProviderGroup")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("provider_group");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("provider_name");

                    b.Property<string>("ProviderType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("provider_type");

                    b.Property<int?>("ProviderUkprn")
                        .HasColumnType("int")
                        .HasColumnName("provider_ukprn");

                    b.Property<int?>("QualityOfEducation")
                        .HasColumnType("int")
                        .HasColumnName("quality_of_education");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("region");

                    b.HasKey("ProviderUrn");

                    b.ToTable("FurtherEducationEstablishments_FIAT", "mis_mstr");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Mstr.MstrAcademyConversion", b =>
                {
                    b.Property<int>("SK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SK"));

                    b.Property<string>("DaoProgress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dAO Progress");

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedOpeningDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Expected Opening Date");

                    b.Property<string>("InComplete")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InComplete");

                    b.Property<string>("InPrepare")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InPrepare");

                    b.Property<DateTime?>("LastDataRefresh")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last Data Refresh");

                    b.Property<string>("LocalAuthority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Local Authority");

                    b.Property<string>("ProjectApplicationType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project Application Type");

                    b.Property<string>("ProjectID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project ID");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project Name");

                    b.Property<string>("ProjectStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project Status");

                    b.Property<string>("RouteOfProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatutoryHighestAge")
                        .HasColumnType("int")
                        .HasColumnName("Statutory Highest Age");

                    b.Property<int?>("StatutoryLowestAge")
                        .HasColumnType("int")
                        .HasColumnName("Statutory Lowest Age");

                    b.Property<string>("TrustID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Trust ID");

                    b.Property<int?>("URN")
                        .HasColumnType("int");

                    b.HasKey("SK");

                    b.ToTable("AcademyConversions", "mstr");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Mstr.MstrAcademyTransfer", b =>
                {
                    b.Property<int>("SK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SK"));

                    b.Property<string>("AcademyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Academy Name");

                    b.Property<string>("AcademyTransferStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Academy transfer Status");

                    b.Property<int?>("AcademyURN")
                        .HasColumnType("int")
                        .HasColumnName("Academy URN");

                    b.Property<DateTime?>("ExpectedTransferDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Expected Academy transfer date");

                    b.Property<string>("InComplete")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("In Complete");

                    b.Property<string>("InPrepare")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("In Prepare");

                    b.Property<DateTime?>("LastDataRefresh")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last Data Refresh");

                    b.Property<string>("LocalAuthority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Local Authority");

                    b.Property<string>("NewProvisionalTrustID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("New provisional Trust ID");

                    b.Property<int?>("StatutoryHighestAge")
                        .HasColumnType("int")
                        .HasColumnName("Statutory Highest Age");

                    b.Property<int?>("StatutoryLowestAge")
                        .HasColumnType("int")
                        .HasColumnName("Statutory Lowest Age");

                    b.HasKey("SK");

                    b.ToTable("AcademyTransfers", "mstr");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Mstr.MstrFreeSchoolProject", b =>
                {
                    b.Property<int>("SK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SK"));

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Establishment Name");

                    b.Property<DateTime?>("LastDataRefresh")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last Data Refresh");

                    b.Property<string>("LocalAuthority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Local Authority");

                    b.Property<int?>("NewURN")
                        .HasColumnType("int")
                        .HasColumnName("New URN");

                    b.Property<string>("ProjectApplicationType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project Application Type");

                    b.Property<string>("ProjectID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project ID");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project Name");

                    b.Property<DateTime?>("ProvisionalOpeningDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Provisional Opening Date");

                    b.Property<string>("RouteOfProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Route of Project");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatutoryHighestAge")
                        .HasColumnType("int")
                        .HasColumnName("Statutory Highest Age");

                    b.Property<int?>("StatutoryLowestAge")
                        .HasColumnType("int")
                        .HasColumnName("Statutory Lowest Age");

                    b.Property<string>("TrustID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Trust ID");

                    b.HasKey("SK");

                    b.ToTable("FreeSchoolProjects", "mstr");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Mstr.MstrTrust", b =>
                {
                    b.Property<string>("GroupUid")
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)")
                        .HasColumnName("Group UID");

                    b.Property<string>("GORregion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GORregion");

                    b.HasKey("GroupUid");

                    b.ToTable("Trust", "mstr");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Ops.ApplicationEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessID")
                        .HasColumnType("int");

                    b.Property<string>("Severity")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Trace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("ApplicationEvent", "ops");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Ops.ApplicationSetting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Created By");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Modified By");

                    b.Property<string>("Value")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Key");

                    b.ToTable("ApplicationSettings", "ops");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Sharepoint.SharepointTrustDocLink", b =>
                {
                    b.Property<string>("FolderPrefix")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FolderYear")
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("DocumentFilename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompaniesHouseNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ContentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRefreshDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentIdvalue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DocumentIDValue");

                    b.Property<string>("DocumentLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrustRefNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("FolderPrefix", "FolderYear", "DocumentFilename");

                    b.ToTable("TrustDocLinks", "sharepoint");
                });

            modelBuilder.Entity("DfE.FindInformationAcademiesTrusts.Data.AcademiesDb.Models.Tad.TadTrustGovernance", b =>
                {
                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Gid")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GID");

                    b.ToTable("TrustGovernance", "tad");
                });
#pragma warning restore 612, 618
        }
    }
}
