name: .NET

on:
  push:
    branches: [ main ]
  pull_request:

env:
  DOTNET_VERSION: '8.0.x'
  JAVA_VERSION: '21'
  TF_VERSION: latest
  LAST_COMMIT_SHA:

jobs:
  sonarcloud:
    name: Scan
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for SonarQube to detect history

      - name: Set SHA environment variable
        run: |
          echo "LAST_COMMIT_SHA=${GITHUB_SHA:(-7)}" >> $GITHUB_ENV

      - name: Set up .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'microsoft'

      - name: Read .terraform-version
        run: |
          DOTFILE_VERSION=$(cat terraform/.terraform-version)
          echo "TF_VERSION=$DOTFILE_VERSION" >> $GITHUB_ENV

      - name: Set up Terraform ${{ env.TF_VERSION }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 8.0.3
          dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.4.4
          dotnet tool restore

      - name: Begin SonarQube Scanner
        run: dotnet-sonarscanner begin /d:sonar.qualitygate.wait=true /k:"DFE-Digital_find-information-about-academies-and-trusts" /o:"dfe-digital" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.scanner.skipJreProvisioning=true /d:sonar.buildString=${{ env.LAST_COMMIT_SHA }}

      - name: Build and Test
        run: |
          dotnet build DfE.FindInformationAcademiesTrusts -c Release
          dotnet coverage collect "dotnet test" -f xml -o "coverage.xml"
          reportgenerator -reports:coverage.xml -targetdir:coverage

      - name: End SonarQube Scanner
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
