name: Run security scanner tests

on:
  workflow_dispatch:
  # workflow_run:
  #   workflows: ["Deploy to environment"]
  #   types:
  #     - completed

env:
  ZAP_ADDRESS: localhost
  ZAP_PORT: 9876
  ZAP_API_KEY: 5c93eec3-b5c0-4252-9061-017ebff89450
  NODE_VERSION: 18.13.0
  LAST_COMMIT_SHA: default

jobs:
  run-tests-with-zap:
    name: Run Playwright tests with OWASP ZAP
    environment: development
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests/playwright
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set SHA environment variable
        run: |
          echo "LAST_COMMIT_SHA=${GITHUB_SHA:(-7)}" >> $GITHUB_ENV

      - name: Create directory on runner
        run: |
          mkdir -m 777 ${{ github.workspace }}/zapoutput

      - name: Get latest ZAP container version
        run: |
          ZAP_VERSION="$(wget -q -O - "https://hub.docker.com/v2/repositories/softwaresecurityproject/zap-stable/tags?page_size=2" | grep -o '"name": *"[^"]*' | grep -o '[^"]*$' | tail -n 1)"
          echo "ZAP_VERSION=${ZAP_VERSION}">> $GITHUB_ENV

      - name: Restore ZAP container from cache if exists
        id: cache-docker-zap
        uses: actions/cache@v3
        with:
          path: ~/ci/cache/docker/softwaresecurityproject
          key: cache-docker-zap-${{ env.ZAP_VERSION }}

      - name: Use cached image if hit
        if: steps.cache-docker-zap.outputs.cache-hit == 'true'
        run: docker image load --input ~/ci/cache/docker/softwaresecurityproject/zap-stable-${{ env.ZAP_VERSION }}.tar

      - name: Pull image if no cache hit
        if: steps.cache-docker-zap.outputs.cache-hit != 'true'
        run: docker pull softwaresecurityproject/zap-stable:latest && mkdir -p ~/ci/cache/docker/softwaresecurityproject && docker image save softwaresecurityproject/zap-stable:latest --output ~/ci/cache/docker/softwaresecurityproject/zap-stable-${{ env.ZAP_VERSION }}.tar

      - name: Start ZAP container
        env:
          ZAP_PORT: 9876
        run: docker run --name zap_container --rm -d -v ${{ github.workspace }}/zapoutput/:/zap/wrk:rw -u zap -p ${{ env.ZAP_PORT }}:${{ env.ZAP_PORT }} -i softwaresecurityproject/zap-stable zap.sh -daemon -port ${{ env.ZAP_PORT }} -host 0.0.0.0 -config api.key=${{ env.ZAP_API_KEY }} -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config network.localServers.mainProxy.alpn.enabled=false -config network.localServers.mainProxy.address=0.0.0.0

      - uses: actions/setup-node@v3
        name: Set up Node.js
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: |
            DfE.FindInformationAcademiesTrusts/package-lock.json
            tests/playwright/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Pin Playwright cache key
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION="$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")"
          PIN_VERSION=${PLAYWRIGHT_VERSION}-`date +%Y-%m-%d`
          echo "PLAYWRIGHT_VERSION=$PIN_VERSION" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright security tests
        env:
          CI: true
          PLAYWRIGHT_BASEURL: ${{ secrets.BASE_URL }}
          HTTP_PROXY: "http://${{ env.ZAP_ADDRESS }}:${{ env.ZAP_PORT }}"
          NO_PROXY: ".gvt1.com"
          ZAP: true
          ZAP_API_KEY: ${{ env.ZAP_API_KEY }}
          ZAP_ADDRESS: ${{ env.ZAP_ADDRESS }}
          ZAP_PORT: ${{ env.ZAP_PORT }}
        run: npx playwright test --project=zap-tests

      - name: Prepare report for upload
        if: '!cancelled()'
        run: |
          zip -qq -r ${{ inputs.environment }}-${{ env.LAST_COMMIT_SHA }}.zip ./playwright-report/

      - name: Azure login with SPN
        if: '!cancelled()'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CI_REPORTS_AZ_CREDENTIALS }}

      - name: Push report to blob storage
        if: '!cancelled()'
        uses: azure/CLI@v1
        id: azure
        with:
          azcliversion: 2.53.0
          inlineScript: |
            GIT_REF=${{ github.base_ref }}
            GIT_BRANCH=${GIT_REF//\//-}
            az storage blob upload \
              --container-name ${{ secrets.CI_REPORTS_STORAGE_CONTAINER_NAME }} \
              --account-name ${{ secrets.CI_REPORTS_STORAGE_ACCOUNT_NAME }} \
              --file "./tests/playwright/${{ inputs.environment }}-${{ env.LAST_COMMIT_SHA }}.zip" \
              --name "Dfe.FindInformationAcademiesTrusts/$GIT_BRANCH/test-security-${{ env.LAST_COMMIT_SHA }}.zip" \
              --auth-mode login \
              --overwrite

      - name: Azure login with SPN
        if: '!cancelled()'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.OWASP_AZ_CREDENTIALS }}

      - name: Push report to blob storage
        if: '!cancelled()'
        uses: azure/CLI@v1
        with:
          azcliversion: 2.53.0
          inlineScript: |
            CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
            az storage blob upload \
              --container-name ${{ secrets.OWASP_STORAGE_CONTAINER_NAME }} \
              --account-name ${{ secrets.OWASP_STORAGE_ACCOUNT_NAME }} \
              --file "${{ github.workspace }}/zapoutput/ZAP-Report.html" \
              --name "Dfe.FindInformationAcademiesTrusts/$CHECKED_OUT_SHA/ZAP-Report.html" \
              --auth-mode login \
              --overwrite

      - name: Stop ZAP container
        if: always()
        run: docker stop zap_container
