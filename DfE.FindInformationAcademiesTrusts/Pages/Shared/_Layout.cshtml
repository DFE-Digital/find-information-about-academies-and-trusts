@model LayoutModel

<!DOCTYPE html>
<html lang="en" class="govuk-template ">

<head>
  <meta charset="utf-8">
  <title>@ViewData["Title"] - @ViewConstants.ServiceName</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">
  <meta name="theme-color" content="#0b0c0c">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <link rel="shortcut icon" sizes="16x16 32x32 48x48" href="~/dist/images/favicon.ico" type="image/x-icon">
  <link rel="mask-icon" href="~/dist/images/govuk-mask-icon.svg" color="#0b0c0c">
  <link rel="apple-touch-icon" sizes="180x180" href="~/dist/images/govuk-apple-touch-icon-180x180.png">
  <link rel="apple-touch-icon" sizes="167x167" href="~/dist/images/govuk-apple-touch-icon-167x167.png">
  <link rel="apple-touch-icon" sizes="152x152" href="~/dist/images/govuk-apple-touch-icon-152x152.png">
  <link rel="apple-touch-icon" href="~/dist/images/govuk-apple-touch-icon.png">
  <link rel="stylesheet" href="~/dist/main.css"/>
</head>

<body class="govuk-template__body ">
  <script asp-add-nonce>
    document.body.className = ((document.body.className) ? document.body.className + ' js-enabled' : 'js-enabled');
  </script>
  <partial name="_Header"/>

  <div class="@Model.GetPageWidthClass("dfe-width-container")">
    <main class="@Model.GetPageWidthClass("govuk-main-wrapper")" id="main-content" role="main">
      @RenderBody()
    </main>
  </div>

  <partial name="_Footer"/>
  <script src="~/dist/main.js"></script>
  <script type="text/javascript" src="~/dist/accessible-autocomplete/accessible-autocomplete.min.js"></script>
  <script type="application/javascript">
  function loadAutocompleteForTrustSearch (inputId, hiddenFieldId, autocompleteContainerId) {
    let loading = false
    function suggest (query, populateResults) {
      if (query && !loading) {
        loading = true
        const http = new XMLHttpRequest()
        http.onload = function () {
          populateResults(JSON.parse(this.responseText))
          loading = false
        }
        
        http.open('GET', `/search?handler=populateautocomplete&keywords=${query}`, true)
        http.send()
      }
    }
         
    accessibleAutocomplete({
      element: document.querySelector(autocompleteContainerId),
      id: inputId,
      name: 'keywords',
      source: suggest,
      autoselect: false,
      confirmOnBlur: false,
      showNoOptionsFound: false,
      displayMenu: 'overlay',
      minLength: 3,
      templates: {
        inputValue: function (r) {return r && r.name},
        suggestion: function (r) {return r && `${r.name}<span class="autocomplete__option-hint">${r.address}</span>`}
      },
      onConfirm: (selected) => {
        if (selected) {          
          document.querySelector(hiddenFieldId).value = (selected.trustId)
        }
      }
    })
  }
  </script>
  @await RenderSectionAsync("Scripts", false)
</body>

</html>
